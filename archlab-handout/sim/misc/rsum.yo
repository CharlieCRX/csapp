                            | # Execution begins at address 0 
0x000:                      | 	.pos 0
0x000: 30f40002000000000000 | 	irmovq stack, %rsp  	# Set up stack pointer
0x00a: 804800000000000000   | 	call main		# Execute main program
0x013: 00                   | 	halt			# Terminate program 
                            | 
                            | # Sample linked list
0x018:                      | 	.align 8
0x018:                      | ele1:
0x018: 0a00000000000000     | 	.quad 0x00a
0x020: 2800000000000000     | 	.quad ele2
0x028:                      | ele2:
0x028: b000000000000000     | 	.quad 0x0b0
0x030: 3800000000000000     | 	.quad ele3
0x038:                      | ele3:
0x038: 000c000000000000     | 	.quad 0xc00
0x040: 0000000000000000     | 	.quad 0
                            | 
0x048:                      | main:	
0x048: 30f71800000000000000 | 	irmovq ele1,%rdi
0x052: 805c00000000000000   | 	call rsum_list		 # rsum_list(ele1)
0x05b: 90                   | 	ret
                            | 
                            | /* $begin rsum_list-ys */
                            | # Recursive version of sum_list
                            | # long rsum_list(list_ptr ls)
                            | # ls in %rdi
0x05c:                      | rsum_list:
0x05c: 30f80800000000000000 | 	irmovq $8, %r8       # Constant 8
0x066: 6300                 | 	xorq %rax, %rax		 # Set val = 0
0x068: 6277                 | 	andq %rdi, %rdi		 # If ls is null, Set CC
0x06a: 73a000000000000000   | 	je return			 # If (!ls), return 0
0x073: a03f                 | 	pushq %rbx			 # Save callee-saved register
0x075: 50370000000000000000 | 	mrmovq (%rdi),%rbx	 # Get *ls
0x07f: 30fa0800000000000000 | 	irmovq $8,%r10
0x089: 50770800000000000000 | 	mrmovq 8(%rdi), %rdi # Get ls->next
0x093: 805c00000000000000   | 	call rsum_list		 # Evaluate rest = rsum_list(ls->next)
0x09c: 6030                 | 	addq %rbx, %rax		 # Add *ls to sum
0x09e: b03f                 | 	popq %rbx 			 # Restore callee-saved register
                            | 	
0x0a0:                      | return:
0x0a0: 90                   | 	ret	
                            | /* $end rsum-ys */	
                            | 
                            | # Stack starts here and grows to lower addresses
0x200:                      | 	.pos 0x200
0x200:                      | stack:
