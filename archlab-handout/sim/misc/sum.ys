# Execution begins at address 0 
	.pos 0
	irmovq stack, %rsp  	# Set up stack pointer
	call main		# Execute main program
	halt			# Terminate program 

# Sample linked list
	.align 8
ele1:
	.quad 0x00a
	.quad ele2
ele2:
	.quad 0x0b0
	.quad ele3
ele3:
	.quad 0xc00
	.quad 0

main:	
	irmovq ele1,%rdi
	call sum_list		# sum_list(ele1)
	ret

# long sum_list(list_ptr ls)
# start ls %rdi
sum_list:
	irmovq $8, %r8       # Constant 8
	xorq %rax, %rax		 # val = 0
	andq %rdi, %rdi		 # ls null? Set CC
	jmp     test         # Goto test
loop:
	mrmovq	(%rdi), %r9	 # Get ls->val
	addq %r9, %rax       # Add to sum
	mrmovq 8(%rdi), %rdi # Get ls->next
	andq %rdi, %rdi		 # ls null? Set CC
test:
	jne    loop          # Stop when ls is null
	ret
	
# Stack starts here and grows to lower addresses
	.pos 0x100
stack:
